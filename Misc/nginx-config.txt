sudo nano /etc/nginx/sites-available/mybybitbot.com

# Define upstream before server block
upstream node_backend {
    server 127.0.0.1:4001;
}

map $request_method $cors_method {
    OPTIONS 'GET, POST, OPTIONS';
    default $request_method;
}

server {
    listen 443 ssl;
    server_name mybybitbot.com;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/mybybitbot.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mybybitbot.com/privkey.pem;

    # Add error logging
    error_log /var/log/nginx/mybybitbot.error.log debug;
    access_log /var/log/nginx/mybybitbot.access.log;

    # Handle preflight requests
    location / {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'https://bybitbot.netlify.app' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Accept,Origin' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # CORS headers for all other requests
        add_header 'Access-Control-Allow-Origin' 'https://bybitbot.netlify.app' always;
        add_header 'Access-Control-Allow-Methods' $cors_method always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Accept,Origin' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Proxy settings
        proxy_pass https://node_backend;
        proxy_http_version 1.1;
        
        # Headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # SSL verification settings
        proxy_ssl_verify off;
        proxy_ssl_session_reuse on;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

server {
    listen 80;
    server_name mybybitbot.com;
    return 301 https://$server_name$request_uri;
}